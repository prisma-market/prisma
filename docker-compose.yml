version: '3.8'

services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 10s
      retries: 5

  auth-service:
    build: 
      context: ./prisma-auth-service
      dockerfile: Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      SERVER_PORT: ${AUTH_SERVER_PORT}
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      JWT_SECRET: ${AUTH_JWT_SECRET}
      JWT_EXPIRES: ${AUTH_JWT_EXPIRES}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM}
      WEB_APP_URL: ${WEB_APP_URL}
    ports:
      - "${AUTH_SERVER_PORT}:${AUTH_SERVER_PORT}"
    restart: unless-stopped

  user-service:
    build:
      context: ./prisma-user-service
      dockerfile: Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      SERVER_PORT: ${USER_SERVER_PORT}
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      JWT_SECRET: ${AUTH_JWT_SECRET}
      AUTH_SERVICE_URL: http://auth-service:${AUTH_SERVER_PORT}
    ports:
      - "${USER_SERVER_PORT}:${USER_SERVER_PORT}"
    restart: unless-stopped
  
  email-service:
    build:
      context: ./prisma-email-service
      dockerfile: Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SERVER_PORT: ${EMAIL_SERVER_PORT}
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      RABBITMQ_URL: amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/
      RABBITMQ_QUEUE: ${EMAIL_QUEUE_NAME}
      RABBITMQ_RETRIES: ${EMAIL_QUEUE_RETRIES}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM}
    ports:
      - "${EMAIL_SERVER_PORT}:${EMAIL_SERVER_PORT}"
    restart: unless-stopped

  api-gateway:
    build:
      context: ./prisma-api-gateway
      dockerfile: Dockerfile
    depends_on:
      - auth-service
      - user-service
    environment:
      PORT: ${GATEWAY_PORT}
      AUTH_SERVICE_URL: http://auth-service:${AUTH_SERVER_PORT}
      USER_SERVICE_URL: http://user-service:${USER_SERVER_PORT}
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    restart: unless-stopped

volumes:
  mongodb_data: